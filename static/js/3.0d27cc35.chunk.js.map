{"version":3,"sources":["components/Users/users.module.css","components/common/Paginator/Paginator.module.css","components/common/Paginator/Paginator.jsx","components/Users/Users.jsx","components/Redux/users-selector.js","components/Users/UsersContainer.jsx"],"names":["module","exports","Paginator","totalUsersCount","pageSize","onPageChanged","currentPage","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","styles","pagination","onClick","filter","p","map","selectedPage","e","Users","users","followingInProcess","follow","unfollow","u","to","id","src","photos","small","defaultAvatar","alt","userPhoto","followed","disabled","some","name","status","getUsers","state","usersPage","userData","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProcess","UsersContainer","pageNumber","props","getUsersThunkCreator","setCurrentPage","this","style","preloader","Preloader","toggleFollowingInProcess","React","Component","compose","withAuthRedirect","connect","followSuccess","unfollowSuccess"],"mappings":"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","file":"static/js/3.0d27cc35.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"users_users__2kq_n\",\"pageNumber\":\"users_pageNumber__2oPY2\",\"userPhoto\":\"users_userPhoto__26ff7\",\"preloader\":\"users_preloader__kTY2N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__41dsN\",\"pageNumber\":\"Paginator_pageNumber__3O8Gk\",\"pages\":\"Paginator_pages__1NSB5\"};","import React, { useState } from 'react';\r\nimport styles from './Paginator.module.css';\r\n\r\nconst Paginator = ({ totalUsersCount, pageSize, onPageChanged, currentPage, portionSize = 10 }) => {\r\n\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n\r\n        pages.push(i);\r\n    }\r\n\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (<div className={styles.pagination}>\r\n\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}>PREV</button>}\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <button className={styles.selectedPage ? 1 : currentPage === p}\r\n                                   key={p}\r\n                                   onClick={(e) => {\r\n                                       onPageChanged(p)\r\n                                   }}>{p}</button>\r\n                })}\r\n\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}>NEXT</button>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport styles from './users.module.css';\r\nimport defaultAvatar from '../../assets/images/defaultAvatar.png'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\n\r\nconst Users = ({\r\n                   totalUsersCount, pageSize, users, followingInProcess,\r\n                   follow, unfollow, onPageChanged, currentPage\r\n               }) => {\r\n    return (\r\n        <div className={styles.users}>\r\n            {\r\n                users.map(u => <div key={u.id}>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                            <div>\r\n                                <img src={u.photos.small != null ? u.photos.small : defaultAvatar} alt=\"\"\r\n                                     className={styles.userPhoto}/>\r\n                            </div>\r\n                        </NavLink>\r\n                        <div>\r\n                            {u.followed\r\n                                ? <button disabled={followingInProcess.some(id => id === u.id)} onClick={() => {\r\n                                    unfollow(u.id)\r\n                                }}>UnFollow</button>\r\n                                : <button disabled={followingInProcess.some(id => id === u.id)} onClick={() => {\r\n                                    follow(u.id)\r\n                                }}>Follow</button>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div>{u.name}</div>\r\n                        <div>{!u.status ? null :`Status: ${u.status}`}</div>\r\n                    </div>\r\n\r\n                </div>)\r\n            }\r\n\r\n            <Paginator totalUsersCount={totalUsersCount} pageSize={pageSize}\r\n                       currentPage={currentPage} onPageChanged={onPageChanged}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","export const getUsers = (state) => {\r\n    return state.usersPage.userData;\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProcess = (state) => {\r\n    return state.usersPage.followingInProcess;\r\n}","import React from 'react'\r\nimport Users from \"./Users\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    setCurrentPage, toggleFollowingInProcess, getUsersThunkCreator, followSuccess,\r\n    unfollowSuccess, follow, unfollow\r\n} from \"../Redux/users-reducer\";\r\nimport Preloader from \"../common/preloader/Preloader\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../Hoc/withAuthRedirect\";\r\nimport style from './users.module.css'\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProcess,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../Redux/users-selector\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let { currentPage, pageSize } = this.props\r\n        this.props.getUsersThunkCreator(currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        let { pageSize } = this.props\r\n        this.props.getUsersThunkCreator(pageNumber, pageSize)\r\n        this.props.setCurrentPage(pageNumber);\r\n    }\r\n\r\n\r\n    render() {\r\n        return <>\r\n            <div className={style.preloader}>{this.props.isFetching ? <Preloader/> : null}</div>\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   users={this.props.users}\r\n                   unfollow={this.props.unfollow}\r\n                   follow={this.props.follow}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   isFetching={this.props.isFetching}\r\n                   toggleFollowingInProcess={this.props.toggleFollowingInProcess}\r\n                   followingInProcess={this.props.followingInProcess}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProcess: getFollowingInProcess(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {\r\n        followSuccess, unfollowSuccess, setCurrentPage,\r\n        toggleFollowingInProcess, getUsersThunkCreator, follow, unfollow\r\n    })\r\n)(UsersContainer)"],"sourceRoot":""}